{"ast":null,"code":"var _jsxFileName = \"/home/godsadeserubuntu/travelscott---travel-support-app-/frontend/src/utils/Slide.js\";\nimport React from \"react\";\nimport { Spring, animated } from \"react-spring/renderprops\";\nimport { withGesture } from \"react-with-gesture\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SlideContainer = styled.div`\n  position: absolute;\n  height: 70%;\n  top: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transform-origin: 50% 50%;\n`;\n_c = SlideContainer;\nconst SlideCard = styled.div`\n  position: relative;\n  max-width: 50%;\n  min-width: 30%;\n  width: 100vw;\n  height: 100%;\n  background: white;\n  font-size: 35px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transform-origin: 50% 50%;\n`;\n_c2 = SlideCard;\nfunction Slide(_ref) {\n  let {\n    content,\n    offsetRadius,\n    index,\n    animationConfig,\n    moveSlide,\n    delta,\n    down,\n    up\n  } = _ref;\n  const offsetFromMiddle = index - offsetRadius;\n  const totalPresentables = 2 * offsetRadius + 1;\n  const distanceFactor = 1 - Math.abs(offsetFromMiddle / (offsetRadius + 1));\n  const offsetCardClick = i => {\n    console.log(i);\n  };\n  const translateYoffset = 50 * (Math.abs(offsetFromMiddle) / (offsetRadius + 1));\n  let translateY = -50;\n  if (offsetRadius !== 0) {\n    if (index === 0) {\n      translateY = 0;\n    } else if (index === totalPresentables - 1) {\n      translateY = -100;\n    }\n  }\n  if (offsetFromMiddle === 0 && down) {\n    translateY += delta[1] / (offsetRadius + 1);\n    if (translateY > -40) {\n      moveSlide(-1);\n    }\n    if (translateY < -100) {\n      moveSlide(1);\n    }\n  }\n  if (offsetFromMiddle > 0) {\n    translateY += translateYoffset;\n  } else if (offsetFromMiddle < 0) {\n    translateY -= translateYoffset;\n  }\n  return /*#__PURE__*/_jsxDEV(Spring, {\n    to: {\n      transform: `translateX(0%) translateY(${translateY}%) scale(${distanceFactor})`,\n      top: `${offsetRadius === 0 ? 50 : 50 + offsetFromMiddle * 50 / offsetRadius}%`,\n      opacity: distanceFactor * distanceFactor\n    },\n    config: animationConfig,\n    children: style => /*#__PURE__*/_jsxDEV(SlideContainer, {\n      style: {\n        ...style,\n        zIndex: Math.abs(Math.abs(offsetFromMiddle) - 2)\n      },\n      children: /*#__PURE__*/_jsxDEV(SlideCard, {\n        onClick: () => moveSlide(offsetFromMiddle),\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_c3 = Slide;\nexport default withGesture()(Slide);\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"SlideContainer\");\n$RefreshReg$(_c2, \"SlideCard\");\n$RefreshReg$(_c3, \"Slide\");","map":{"version":3,"names":["React","Spring","animated","withGesture","SlideContainer","styled","div","SlideCard","Slide","content","offsetRadius","index","animationConfig","moveSlide","delta","down","up","offsetFromMiddle","totalPresentables","distanceFactor","Math","abs","offsetCardClick","i","console","log","translateYoffset","translateY","transform","top","opacity","style","zIndex"],"sources":["/home/godsadeserubuntu/travelscott---travel-support-app-/frontend/src/utils/Slide.js"],"sourcesContent":["import React from \"react\";\nimport { Spring, animated } from \"react-spring/renderprops\";\nimport { withGesture } from \"react-with-gesture\";\n\nconst SlideContainer = styled.div`\n  position: absolute;\n  height: 70%;\n  top: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transform-origin: 50% 50%;\n`;\n\nconst SlideCard = styled.div`\n  position: relative;\n  max-width: 50%;\n  min-width: 30%;\n  width: 100vw;\n  height: 100%;\n  background: white;\n  font-size: 35px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transform-origin: 50% 50%;\n`;\n\nfunction Slide({\n  content,\n  offsetRadius,\n  index,\n  animationConfig,\n  moveSlide,\n  delta,\n  down,\n  up\n}) {\n  const offsetFromMiddle = index - offsetRadius;\n  const totalPresentables = 2 * offsetRadius + 1;\n  const distanceFactor = 1 - Math.abs(offsetFromMiddle / (offsetRadius + 1));\n\n  const offsetCardClick = i => {\n    console.log(i);\n  };\n\n  const translateYoffset =\n    50 * (Math.abs(offsetFromMiddle) / (offsetRadius + 1));\n  let translateY = -50;\n\n  if (offsetRadius !== 0) {\n    if (index === 0) {\n      translateY = 0;\n    } else if (index === totalPresentables - 1) {\n      translateY = -100;\n    }\n  }\n\n  if (offsetFromMiddle === 0 && down) {\n    translateY += delta[1] / (offsetRadius + 1);\n    if (translateY > -40) {\n      moveSlide(-1);\n    }\n    if (translateY < -100) {\n      moveSlide(1);\n    }\n  }\n  if (offsetFromMiddle > 0) {\n    translateY += translateYoffset;\n  } else if (offsetFromMiddle < 0) {\n    translateY -= translateYoffset;\n  }\n\n  return (\n    <Spring\n      to={{\n        transform: `translateX(0%) translateY(${translateY}%) scale(${distanceFactor})`,\n        top: `${\n          offsetRadius === 0 ? 50 : 50 + (offsetFromMiddle * 50) / offsetRadius\n        }%`,\n        opacity: distanceFactor * distanceFactor\n      }}\n      config={animationConfig}\n    >\n      {style => (\n        <SlideContainer\n          style={{\n            ...style,\n            zIndex: Math.abs(Math.abs(offsetFromMiddle) - 2)\n          }}\n        >\n          <SlideCard onClick={() => moveSlide(offsetFromMiddle)}>\n            {content}\n          </SlideCard>\n        </SlideContainer>\n      )}\n    </Spring>\n  );\n}\n\nexport default withGesture()(Slide);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}